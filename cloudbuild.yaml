options:
  env:
    - 'CLOUDSDK_CONTAINER_CLUSTER=web-app-cluster'
    - 'CLOUDSDK_CONTAINER_ZONE=us-central1'
    - 'CLOUDSDK_CORE_PROJECT=flask-app-436123'
    - 'CLOUDSDK_COMPUTE_REGION=us-central1'

steps:
    # step 1: build the frontend docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/frontend:${SHORT_SHA}', './frontend' ]

    # step 2: build the backend docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/backend:${SHORT_SHA}', './backend' ]

    # step 3: push the frontend docker image to the GCR repository
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/frontend:${SHORT_SHA}']

    # step 4: push the backend docker image to the GCR repository
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/backend:${SHORT_SHA}' ]

  # Step 5: Deploy the frontend to Kubernetes
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/frontend-deployment'
      - 'node-frontend=gcr.io/$PROJECT_ID/frontend:${SHORT_SHA}'
      - '--namespace=frontend-ns'
    env:
      - 'CLOUDSDK_CONTAINER_CLUSTER=web-app-cluster'
      - 'CLOUDSDK_CONTAINER_ZONE=us-central1'

  # Step 6: Deploy the backend to Kubernetes
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/flask-backend'
      - 'flask-backend=gcr.io/$PROJECT_ID/backend:${SHORT_SHA}'
      - '--namespace=backend-ns'
    env:
      - 'CLOUDSDK_CONTAINER_CLUSTER=web-app-cluster'
      - 'CLOUDSDK_CONTAINER_ZONE=us-central1'

logsBucket: 'gs://gcp-app-logs'